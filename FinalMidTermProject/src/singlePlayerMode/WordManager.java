package singlePlayerMode;

import java.util.Random;

/**
 * @author mateenBagheri, amirHosseinMaleki, RezaTahmasbi.
 * @since 1397/02/26
 *
 * <i>{@link WordManager}</i> class is a class which manages every
 * "word" related purposes and is consisted of  three static method
 * with word related purposes.Word manager's job is creating random
 * char, checking if the character entered by user is equal to the
 * one generated by this class and checking how many letters (chars)
 * does our class need to generate and check!
 */
public class WordManager {
    private static char randomChar;

    public WordManager() {
    }

    /**
     * <i>getRandomChar</i> is a class we use to generate random
     * chars in shape of letters using {@link Random} class.
     * @return a random character
     */
    public static char getRandomChar(){
        Random random = new Random();
        randomChar = (char) (random.nextInt(26) + 65);
        return randomChar;
    }

    /**
     * <i>checkCharacter</i> method is an static method we use
     * to check if the character entered by the user (char in arg)
     * is equal to the random char generated by the same class.
     * @param inChar character entered by the user.
     * @return a boolean as True if there is equality and False if not.
     */
    public static boolean checkCharacter (char inChar,char generatedChar){
        if (inChar == generatedChar){
            return true;
        }
        return false;
    }

    /**
     * <i>getLetterNumber</i> is a getter method which returns
     * the number of letters (chars) we need to generate using
     * our {@link WordManager} class.If the currentTime argument
     * is entered wrong the returned value will be -1.
     * @param currentTime represents the current time of the
     *                    game that we are on it. a long
     *                    value between 60 and zero (0).
     * @return No of letters created by {@link WordManager}.
     */
    public static int getLetterNumber (long currentTime){
        if ( (currentTime >= 0 && currentTime<5000) || (currentTime >= 10000 && currentTime < 25000) ){
            return 1;
        }
        else if ( (currentTime >= 5000 && currentTime <10000) || (currentTime >= 25000 && currentTime < 45000) ) {
            return 2;
        }
        else if ( (currentTime >= 45000 && currentTime < 56000) ) {
            return 3;
        }
        else if ( (currentTime>=56000 && currentTime<=60000) ) {
            return 4;
        }
        else
            return -1;
    }
}
